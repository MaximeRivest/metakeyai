name: Build & Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install UV (Linux/macOS)
        if: runner.os != 'Windows'
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install UV (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
          echo "$env:USERPROFILE\.cargo\bin" >> $env:GITHUB_PATH

      - name: Verify UV installation
        run: uv --version

      - name: Install dependencies
        run: npm ci

      - name: Setup Python environment
        run: npm run setup:python

      - name: Build Python components
        run: npm run build:python

      - name: Verify Windows build (Windows only)
        if: runner.os == 'Windows'
        run: node scripts/verify-windows-build.js

      - name: Build Electron app
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metakeyai-${{ runner.os }}
          path: out/make/**/* 

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Generate Release Tag
        id: tag
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "name=MetaKeyAI ${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "prerelease=false" >> $GITHUB_OUTPUT
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.name }}
          body: |
            ## MetaKeyAI Release ${{ steps.tag.outputs.tag }}
            
            **Automated release from commit:** `${{ github.sha }}`
            
            ### 📦 Downloads
            - **🪟 Windows**: Download the `.exe` installer
            - **🍎 macOS**: Download the `.zip` file and extract  
            - **🐧 Linux**: Download the `.AppImage` file and make executable
            
            ### 🚀 Installation
            1. Download the appropriate file for your platform below
            2. Run the installer (Windows) or extract and run (macOS/Linux)
            3. The app will automatically set up its Python environment on first run
            4. Requires internet connection for initial UV/Python setup
            
            ### ✨ Features
            - Voice recording and AI processing
            - Cross-platform Python integration with UV
            - Real-time audio visualization
            - AI spell system for text processing
            
            ### 🐛 Issues?
            Report bugs at: https://github.com/${{ github.repository }}/issues
          draft: false
          prerelease: ${{ steps.tag.outputs.prerelease }}
          files: |
            artifacts/**/*.exe
            artifacts/**/*.zip
            artifacts/**/*.AppImage
            artifacts/**/*.dmg
            artifacts/**/*.deb
            artifacts/**/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 