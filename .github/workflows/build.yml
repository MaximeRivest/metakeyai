name: Build & Release

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv (Linux/macOS)
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
        if: runner.os != 'Windows'

      - name: Add uv to PATH (Linux/macOS)
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        if: runner.os != 'Windows'
        
      - name: Install uv (Windows)
        run: powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
        if: runner.os == 'Windows'

      - name: Add uv to PATH (Windows)
        run: echo "$env:USERPROFILE\\.cargo\\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
        if: runner.os == 'Windows'
        shell: pwsh
        
      - name: Install npm dependencies
        run: npm install

      - name: Build and package application
        run: npm run make
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metakeyai-${{ matrix.os }}
          path: |
            out/make/**/*.AppImage
            out/make/**/*.deb
            out/make/**/*.exe
            out/make/**/*.zip
            out/make/**/*.dmg 